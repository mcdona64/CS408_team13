cah.ajax.SuccessHandlers[cah.$.AjaxOperation.REGISTER]=function(data){cah.nickname=data[cah.$.AjaxResponse.NICKNAME];if(!cah.noPersistentId){cah.persistentId=data[cah.$.AjaxResponse.PERSISTENT_ID];cah.setCookie("persistent_id",cah.persistentId);}
cah.log.status("You are connected as "+ cah.nickname);$("#welcome").hide();$("#canvass").show();cah.ajax.after_registered();};cah.ajax.ErrorHandlers[cah.$.AjaxOperation.REGISTER]=function(data){$("#nickbox_error").text(cah.$.ErrorCode_msg[data[cah.$.AjaxResponse.ERROR_CODE]]);$("#nickname").focus();};cah.ajax.hasAutojoinedGame_=false;cah.ajax.SuccessHandlers[cah.$.AjaxOperation.FIRST_LOAD]=function(data){cah.CardSet.populateCardSets(data[cah.$.AjaxResponse.CARD_SETS]);if(data[cah.$.AjaxResponse.IN_PROGRESS]){cah.nickname=data[cah.$.AjaxResponse.NICKNAME];cah.log.status("You have reconnected as "+ cah.nickname);$("#welcome").hide();$("#canvass").show();cah.ajax.after_registered();switch(data[cah.$.AjaxResponse.NEXT]){case cah.$.ReconnectNextAction.GAME:cah.log.status("Reconnecting to game...");cah.Game.joinGame(data[cah.$.AjaxResponse.GAME_ID]);cah.ajax.hasAutojoinedGame_=true;break;case cah.$.ReconnectNextAction.NONE:break;default:cah.log.error("Unknown reconnect next action "+ data[cah.$.AjaxResponse.NEXT]);}}};cah.ajax.hasRetriedFirstLoad_=false;cah.ajax.ErrorHandlers[cah.$.AjaxOperation.FIRST_LOAD]=function(data){if(data[cah.$.AjaxResponse.ERROR_CODE]==cah.$.ErrorCode.SESSION_EXPIRED&&!cah.ajax.hasRetriedFirstLoad_){cah.ajax.hasRetriedFirstLoad_=true;cah.Ajax.build(cah.$.AjaxOperation.FIRST_LOAD).run();}else{cah.ajax.ErrorHandlers[cah.$.AjaxOperation.REGISTER](data);}};cah.ajax.autojoinGameId_=undefined;cah.ajax.after_registered=function(){cah.log.debug("done registering");$("#canvas").removeClass("hide");$("#bottom").removeClass("hide");cah.Ajax.build(cah.$.AjaxOperation.NAMES).run();cah.log.error("IMPORTANT: Global chat has been disabled.");cah.GameList.instance.show();cah.GameList.instance.update();cah.longpoll.longPoll();app_resize();var hash=window.location.hash.substring(1);if(hash&&hash!=''){var params=hash.split('&');var options={};for(var i in params){var split=params[i].split('=');var key=split[0];var value=split[1];options[key]=value;}
if(options['game']){cah.ajax.autojoinGameId_=options['game'];}}};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.CHAT]=function(data){};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.GAME_CHAT]=function(data){};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.LOG_OUT]=function(data){window.location.reload();};cah.ajax.ErrorHandlers[cah.$.AjaxOperation.LOG_OUT]=cah.ajax.SuccessHandlers[cah.$.AjaxOperation.LOG_OUT];cah.ajax.SuccessHandlers[cah.$.AjaxOperation.NAMES]=function(data){cah.log.status("Currently connected: "+ data[cah.$.AjaxResponse.NAMES].join(", "));};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.GAME_LIST]=function(data){cah.GameList.instance.processUpdate(data);if(cah.ajax.autojoinGameId_&&!cah.ajax.hasAutojoinedGame_){try{cah.GameList.instance.joinGame(cah.ajax.autojoinGameId_);}catch(e){cah.log.error(e);cah.updateHash('');}
cah.ajax.autojoinGameId_=undefined;}};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.JOIN_GAME]=function(data,req){cah.Game.joinGame(req[cah.$.AjaxRequest.GAME_ID]);};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.SPECTATE_GAME]=function(data,req){cah.Game.joinGame(req[cah.$.AjaxRequest.GAME_ID]);};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.CREATE_GAME]=function(data){cah.Game.joinGame(data[cah.$.AjaxResponse.GAME_ID]);};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.GET_GAME_INFO]=function(data,req){var game=cah.currentGames[req[cah.$.AjaxRequest.GAME_ID]];if(game){game.updateGameStatus(data);}};cah.ajax.ErrorHandlers[cah.$.AjaxOperation.GET_GAME_INFO]=function(data,req){if(data[cah.$.AjaxResponse.ERROR_CODE]==cah.$.ErrorCode.INVALID_GAME){cah.log.error("The game has been removed. Returning to the lobby.");cah.ajax.SuccessHandlers[cah.$.AjaxOperation.LEAVE_GAME](data,req);}else{cah.log.error(cah.$.ErrorCode_msg[data[cah.$.AjaxResponse.ERROR_CODE]]);}};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.LEAVE_GAME]=function(data,req){var game=cah.currentGames[req[cah.$.AjaxRequest.GAME_ID]];if(game){game.dispose();delete cah.currentGames[req[cah.$.AjaxRequest.GAME_ID]];}
cah.GameList.instance.show();cah.GameList.instance.update();};cah.ajax.ErrorHandlers[cah.$.AjaxOperation.LEAVE_GAME]=function(data,req){if(data[cah.$.AjaxResponse.ERROR_CODE]==cah.$.ErrorCode.INVALID_GAME){cah.ajax.SuccessHandlers[cah.$.AjaxOperation.LEAVE_GAME](data,req);}else{cah.log.error(cah.$.ErrorCode_msg[data[cah.$.AjaxResponse.ERROR_CODE]]);}};cah.ajax.ErrorHandlers[cah.$.AjaxOperation.START_GAME]=function(data,req){if(data[cah.$.AjaxResponse.ERROR_CODE]==cah.$.ErrorCode.NOT_ENOUGH_CARDS){var msg="With current settings, the game requires "
+ data[cah.$.ErrorInformation.BLACK_CARDS_REQUIRED]+" black cards and "
+ data[cah.$.ErrorInformation.WHITE_CARDS_REQUIRED]+" white cards, but only has "
+ data[cah.$.ErrorInformation.BLACK_CARDS_PRESENT]+" black cards and "
+ data[cah.$.ErrorInformation.WHITE_CARDS_PRESENT]+" white cards.";cah.log.status_with_game(req[cah.$.AjaxRequest.GAME_ID],msg,"error");}else{cah.log.error(cah.$.ErrorCode_msg[data[cah.$.AjaxResponse.ERROR_CODE]]);}};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.START_GAME]=function(data,req){var game=cah.currentGames[data[cah.$.AjaxRequest.GAME_ID]];if(game){game.startGameComplete();}};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.STOP_GAME]=function(data,req){};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.GET_CARDS]=function(data,req){var gameId=req[cah.$.AjaxRequest.GAME_ID];var game=cah.currentGames[gameId];if(game){game.dealtCards(data[cah.$.AjaxResponse.HAND]);if(data[cah.$.AjaxResponse.BLACK_CARD]){game.setBlackCard(data[cah.$.AjaxResponse.BLACK_CARD]);}
if(data[cah.$.AjaxResponse.WHITE_CARDS]){game.setRoundWhiteCards(data[cah.$.AjaxResponse.WHITE_CARDS]);}}else{cah.log.error("Received hand for unknown game id "+ gameId);}};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.PLAY_CARD]=function(data,req){var gameId=req[cah.$.AjaxRequest.GAME_ID];var game=cah.currentGames[gameId];if(game){game.playCardComplete();}};cah.ajax.ErrorHandlers[cah.$.AjaxOperation.PLAY_CARD]=function(data){cah.log.error(cah.$.ErrorCode_msg[data[cah.$.AjaxResponse.ERROR_CODE]]);var gameId=req[cah.$.AjaxRequest.GAME_ID];var game=cah.currentGames[gameId];if(game){game.playCardError();}};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.JUDGE_SELECT]=function(data){};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.CHANGE_GAME_OPTIONS]=function(data){};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.KICK]=function(data){};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.BAN]=function(data){};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.SCORE]=function(data,req){var gameId=req[cah.$.AjaxRequest.GAME_ID];var info=data[cah.$.AjaxResponse.PLAYER_INFO];var msg=info[cah.$.GamePlayerInfo.NAME]+" has "+ info[cah.$.GamePlayerInfo.SCORE]
+" Awesome Points.";if(gameId){cah.log.status_with_game(gameId,msg);}else{cah.log.status(msg);}};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.CARDCAST_ADD_CARDSET]=function(data){};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.CARDCAST_REMOVE_CARDSET]=function(data){};cah.ajax.SuccessHandlers[cah.$.AjaxOperation.CARDCAST_LIST_CARDSETS]=function(data,req){var gameId=req[cah.$.AjaxRequest.GAME_ID];var game=cah.currentGames[gameId];if(game){game.listCardcastDecks(data[cah.$.AjaxResponse.CARD_SETS]);}};